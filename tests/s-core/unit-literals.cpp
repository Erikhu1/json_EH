
#include "doctest_compatibility.h"

#include <nlohmann/json.hpp>
using nlohmann::json;

TEST_CASE("accept")
{
    // only lower case literal names true, null and false are allowed json tokens
    // any capital letter gives illegal token
    SECTION("capitalisation")
    {
        SECTION("true")
        {
            CHECK(!json::accept("True"));
            CHECK(!json::accept("tRue"));
            CHECK(!json::accept("trUe"));
            CHECK(!json::accept("truE"));
            CHECK(!json::accept("TRue"));
            CHECK(!json::accept("TrUe"));
            CHECK(!json::accept("TruE"));
            CHECK(!json::accept("tRUe"));
            CHECK(!json::accept("tRuE"));
            CHECK(!json::accept("trUE"));
            CHECK(!json::accept("TRUe"));
            CHECK(!json::accept("TRuE"));
            CHECK(!json::accept("TrUE"));
            CHECK(!json::accept("tRUE"));
            CHECK(!json::accept("TRUE"));
        }
        SECTION("null")
        {
            CHECK(!json::accept("Null"));
            CHECK(!json::accept("nUll"));
            CHECK(!json::accept("nuLl"));
            CHECK(!json::accept("nulL"));
            CHECK(!json::accept("NUll"));
            CHECK(!json::accept("NuLl"));
            CHECK(!json::accept("NulL"));
            CHECK(!json::accept("nULl"));
            CHECK(!json::accept("nUlL"));
            CHECK(!json::accept("nuLL"));
            CHECK(!json::accept("NULl"));
            CHECK(!json::accept("NUlL"));
            CHECK(!json::accept("NuLL"));
            CHECK(!json::accept("nULL"));
            CHECK(!json::accept("NULL"));
        }
        SECTION("false")
        {            
            CHECK(!json::accept("False"));
            CHECK(!json::accept("fAlse"));
            CHECK(!json::accept("FAlse"));
            CHECK(!json::accept("faLse"));
            CHECK(!json::accept("FaLse"));
            CHECK(!json::accept("fALse"));
            CHECK(!json::accept("FALse"));
            CHECK(!json::accept("falSe"));
            CHECK(!json::accept("FalSe"));
            CHECK(!json::accept("fAlSe"));
            CHECK(!json::accept("FAlSe"));
            CHECK(!json::accept("faLSe"));
            CHECK(!json::accept("FaLSe"));
            CHECK(!json::accept("fALSe"));
            CHECK(!json::accept("FALSe"));
            CHECK(!json::accept("falsE"));
            CHECK(!json::accept("FalsE"));
            CHECK(!json::accept("fAlsE"));
            CHECK(!json::accept("FAlsE"));
            CHECK(!json::accept("faLsE"));
            CHECK(!json::accept("FaLsE"));
            CHECK(!json::accept("fALsE"));
            CHECK(!json::accept("FALsE"));
            CHECK(!json::accept("falSE"));
            CHECK(!json::accept("FalSE"));
            CHECK(!json::accept("fAlSE"));
            CHECK(!json::accept("FAlSE"));
            CHECK(!json::accept("faLSE"));
            CHECK(!json::accept("FaLSE"));
            CHECK(!json::accept("fALSE"));
            CHECK(!json::accept("FALSE"));
        }
    }
    // There are no other literal names that are valid json tokens.
    // Verify that some common literal names are rejected, no matter what letter is capital.
    SECTION("illegal literals")
    {
        SECTION("nil")
        {
            CHECK(!json::accept("nil"));
            CHECK(!json::accept("Nil"));
            CHECK(!json::accept("nIl"));
            CHECK(!json::accept("NIl"));
            CHECK(!json::accept("niL"));
            CHECK(!json::accept("NiL"));
            CHECK(!json::accept("nIL"));
            CHECK(!json::accept("NIL"));
        }
        SECTION("truth")
        {
            CHECK(!json::accept("truth"));
            CHECK(!json::accept("Truth"));
            CHECK(!json::accept("tRuth"));
            CHECK(!json::accept("TRuth"));
            CHECK(!json::accept("trUth"));
            CHECK(!json::accept("TrUth"));
            CHECK(!json::accept("tRUth"));
            CHECK(!json::accept("TRUth"));
            CHECK(!json::accept("truTh"));
            CHECK(!json::accept("TruTh"));
            CHECK(!json::accept("tRuTh"));
            CHECK(!json::accept("TRuTh"));
            CHECK(!json::accept("trUTh"));
            CHECK(!json::accept("TrUTh"));
            CHECK(!json::accept("tRUTh"));
            CHECK(!json::accept("TRUTh"));
            CHECK(!json::accept("trutH"));
            CHECK(!json::accept("TrutH"));
            CHECK(!json::accept("tRutH"));
            CHECK(!json::accept("TRutH"));
            CHECK(!json::accept("trUtH"));
            CHECK(!json::accept("TrUtH"));
            CHECK(!json::accept("tRUtH"));
            CHECK(!json::accept("TRUtH"));
            CHECK(!json::accept("truTH"));
            CHECK(!json::accept("TruTH"));
            CHECK(!json::accept("tRuTH"));
            CHECK(!json::accept("TRuTH"));
            CHECK(!json::accept("trUTH"));
            CHECK(!json::accept("TrUTH"));
            CHECK(!json::accept("tRUTH"));
            CHECK(!json::accept("TRUTH"));
        }
		SECTION("const")
		{
			CHECK(!json::accept("const"));
			CHECK(!json::accept("Const"));
			CHECK(!json::accept("cOnst"));
			CHECK(!json::accept("COnst"));
			CHECK(!json::accept("coNst"));
			CHECK(!json::accept("CoNst"));
			CHECK(!json::accept("cONst"));
			CHECK(!json::accept("CONst"));
			CHECK(!json::accept("conSt"));
			CHECK(!json::accept("ConSt"));
			CHECK(!json::accept("cOnSt"));
			CHECK(!json::accept("COnSt"));
			CHECK(!json::accept("coNSt"));
			CHECK(!json::accept("CoNSt"));
			CHECK(!json::accept("cONSt"));
			CHECK(!json::accept("CONSt"));
			CHECK(!json::accept("consT"));
			CHECK(!json::accept("ConsT"));
			CHECK(!json::accept("cOnsT"));
			CHECK(!json::accept("COnsT"));
			CHECK(!json::accept("coNsT"));
			CHECK(!json::accept("CoNsT"));
			CHECK(!json::accept("cONsT"));
			CHECK(!json::accept("CONsT"));
			CHECK(!json::accept("conST"));
			CHECK(!json::accept("ConST"));
			CHECK(!json::accept("cOnST"));
			CHECK(!json::accept("COnST"));
			CHECK(!json::accept("coNST"));
			CHECK(!json::accept("CoNST"));
			CHECK(!json::accept("cONST"));
			CHECK(!json::accept("CONST"));
		}
		SECTION("none")
		{
			CHECK(!json::accept("none"));
			CHECK(!json::accept("None"));
			CHECK(!json::accept("nOne"));
			CHECK(!json::accept("NOne"));
			CHECK(!json::accept("noNe"));
			CHECK(!json::accept("NoNe"));
			CHECK(!json::accept("nONe"));
			CHECK(!json::accept("NONe"));
			CHECK(!json::accept("nonE"));
			CHECK(!json::accept("NonE"));
			CHECK(!json::accept("nOnE"));
			CHECK(!json::accept("NOnE"));
			CHECK(!json::accept("noNE"));
			CHECK(!json::accept("NoNE"));
			CHECK(!json::accept("nONE"));
			CHECK(!json::accept("NONE"));
		}
		SECTION("self")
		{
			CHECK(!json::accept("self"));
			CHECK(!json::accept("Self"));
			CHECK(!json::accept("sElf"));
			CHECK(!json::accept("SElf"));
			CHECK(!json::accept("seLf"));
			CHECK(!json::accept("SeLf"));
			CHECK(!json::accept("sELf"));
			CHECK(!json::accept("SELf"));
			CHECK(!json::accept("selF"));
			CHECK(!json::accept("SelF"));
			CHECK(!json::accept("sElF"));
			CHECK(!json::accept("SElF"));
			CHECK(!json::accept("seLF"));
			CHECK(!json::accept("SeLF"));
			CHECK(!json::accept("sELF"));
			CHECK(!json::accept("SELF"));
		}
		SECTION("super")
		{
			CHECK(!json::accept("super"));
			CHECK(!json::accept("Super"));
			CHECK(!json::accept("sUper"));
			CHECK(!json::accept("SUper"));
			CHECK(!json::accept("suPer"));
			CHECK(!json::accept("SuPer"));
			CHECK(!json::accept("sUPer"));
			CHECK(!json::accept("SUPer"));
			CHECK(!json::accept("supEr"));
			CHECK(!json::accept("SupEr"));
			CHECK(!json::accept("sUpEr"));
			CHECK(!json::accept("SUpEr"));
			CHECK(!json::accept("suPEr"));
			CHECK(!json::accept("SuPEr"));
			CHECK(!json::accept("sUPEr"));
			CHECK(!json::accept("SUPEr"));
			CHECK(!json::accept("supeR"));
			CHECK(!json::accept("SupeR"));
			CHECK(!json::accept("sUpeR"));
			CHECK(!json::accept("SUpeR"));
			CHECK(!json::accept("suPeR"));
			CHECK(!json::accept("SuPeR"));
			CHECK(!json::accept("sUPeR"));
			CHECK(!json::accept("SUPeR"));
			CHECK(!json::accept("supER"));
			CHECK(!json::accept("SupER"));
			CHECK(!json::accept("sUpER"));
			CHECK(!json::accept("SUpER"));
			CHECK(!json::accept("suPER"));
			CHECK(!json::accept("SuPER"));
			CHECK(!json::accept("sUPER"));
			CHECK(!json::accept("SUPER"));
		}
		SECTION("this")
		{
			CHECK(!json::accept("this"));
			CHECK(!json::accept("This"));
			CHECK(!json::accept("tHis"));
			CHECK(!json::accept("THis"));
			CHECK(!json::accept("thIs"));
			CHECK(!json::accept("ThIs"));
			CHECK(!json::accept("tHIs"));
			CHECK(!json::accept("THIs"));
			CHECK(!json::accept("thiS"));
			CHECK(!json::accept("ThiS"));
			CHECK(!json::accept("tHiS"));
			CHECK(!json::accept("THiS"));
			CHECK(!json::accept("thIS"));
			CHECK(!json::accept("ThIS"));
			CHECK(!json::accept("tHIS"));
			CHECK(!json::accept("THIS"));
		}
		SECTION("undefined")
		{
			CHECK(!json::accept("undefined"));
			CHECK(!json::accept("Undefined"));
			CHECK(!json::accept("uNdefined"));
			CHECK(!json::accept("UNdefined"));
			CHECK(!json::accept("unDefined"));
			CHECK(!json::accept("UnDefined"));
			CHECK(!json::accept("uNDefined"));
			CHECK(!json::accept("UNDefined"));
			CHECK(!json::accept("undEfined"));
			CHECK(!json::accept("UndEfined"));
			CHECK(!json::accept("uNdEfined"));
			CHECK(!json::accept("UNdEfined"));
			CHECK(!json::accept("unDEfined"));
			CHECK(!json::accept("UnDEfined"));
			CHECK(!json::accept("uNDEfined"));
			CHECK(!json::accept("UNDEfined"));
			CHECK(!json::accept("undeFined"));
			CHECK(!json::accept("UndeFined"));
			CHECK(!json::accept("uNdeFined"));
			CHECK(!json::accept("UNdeFined"));
			CHECK(!json::accept("unDeFined"));
			CHECK(!json::accept("UnDeFined"));
			CHECK(!json::accept("uNDeFined"));
			CHECK(!json::accept("UNDeFined"));
			CHECK(!json::accept("undEFined"));
			CHECK(!json::accept("UndEFined"));
			CHECK(!json::accept("uNdEFined"));
			CHECK(!json::accept("UNdEFined"));
			CHECK(!json::accept("unDEFined"));
			CHECK(!json::accept("UnDEFined"));
			CHECK(!json::accept("uNDEFined"));
			CHECK(!json::accept("UNDEFined"));
			CHECK(!json::accept("undefIned"));
			CHECK(!json::accept("UndefIned"));
			CHECK(!json::accept("uNdefIned"));
			CHECK(!json::accept("UNdefIned"));
			CHECK(!json::accept("unDefIned"));
			CHECK(!json::accept("UnDefIned"));
			CHECK(!json::accept("uNDefIned"));
			CHECK(!json::accept("UNDefIned"));
			CHECK(!json::accept("undEfIned"));
			CHECK(!json::accept("UndEfIned"));
			CHECK(!json::accept("uNdEfIned"));
			CHECK(!json::accept("UNdEfIned"));
			CHECK(!json::accept("unDEfIned"));
			CHECK(!json::accept("UnDEfIned"));
			CHECK(!json::accept("uNDEfIned"));
			CHECK(!json::accept("UNDEfIned"));
			CHECK(!json::accept("undeFIned"));
			CHECK(!json::accept("UndeFIned"));
			CHECK(!json::accept("uNdeFIned"));
			CHECK(!json::accept("UNdeFIned"));
			CHECK(!json::accept("unDeFIned"));
			CHECK(!json::accept("UnDeFIned"));
			CHECK(!json::accept("uNDeFIned"));
			CHECK(!json::accept("UNDeFIned"));
			CHECK(!json::accept("undEFIned"));
			CHECK(!json::accept("UndEFIned"));
			CHECK(!json::accept("uNdEFIned"));
			CHECK(!json::accept("UNdEFIned"));
			CHECK(!json::accept("unDEFIned"));
			CHECK(!json::accept("UnDEFIned"));
			CHECK(!json::accept("uNDEFIned"));
			CHECK(!json::accept("UNDEFIned"));
			CHECK(!json::accept("undefiNed"));
			CHECK(!json::accept("UndefiNed"));
			CHECK(!json::accept("uNdefiNed"));
			CHECK(!json::accept("UNdefiNed"));
			CHECK(!json::accept("unDefiNed"));
			CHECK(!json::accept("UnDefiNed"));
			CHECK(!json::accept("uNDefiNed"));
			CHECK(!json::accept("UNDefiNed"));
			CHECK(!json::accept("undEfiNed"));
			CHECK(!json::accept("UndEfiNed"));
			CHECK(!json::accept("uNdEfiNed"));
			CHECK(!json::accept("UNdEfiNed"));
			CHECK(!json::accept("unDEfiNed"));
			CHECK(!json::accept("UnDEfiNed"));
			CHECK(!json::accept("uNDEfiNed"));
			CHECK(!json::accept("UNDEfiNed"));
			CHECK(!json::accept("undeFiNed"));
			CHECK(!json::accept("UndeFiNed"));
			CHECK(!json::accept("uNdeFiNed"));
			CHECK(!json::accept("UNdeFiNed"));
			CHECK(!json::accept("unDeFiNed"));
			CHECK(!json::accept("UnDeFiNed"));
			CHECK(!json::accept("uNDeFiNed"));
			CHECK(!json::accept("UNDeFiNed"));
			CHECK(!json::accept("undEFiNed"));
			CHECK(!json::accept("UndEFiNed"));
			CHECK(!json::accept("uNdEFiNed"));
			CHECK(!json::accept("UNdEFiNed"));
			CHECK(!json::accept("unDEFiNed"));
			CHECK(!json::accept("UnDEFiNed"));
			CHECK(!json::accept("uNDEFiNed"));
			CHECK(!json::accept("UNDEFiNed"));
			CHECK(!json::accept("undefINed"));
			CHECK(!json::accept("UndefINed"));
			CHECK(!json::accept("uNdefINed"));
			CHECK(!json::accept("UNdefINed"));
			CHECK(!json::accept("unDefINed"));
			CHECK(!json::accept("UnDefINed"));
			CHECK(!json::accept("uNDefINed"));
			CHECK(!json::accept("UNDefINed"));
			CHECK(!json::accept("undEfINed"));
			CHECK(!json::accept("UndEfINed"));
			CHECK(!json::accept("uNdEfINed"));
			CHECK(!json::accept("UNdEfINed"));
			CHECK(!json::accept("unDEfINed"));
			CHECK(!json::accept("UnDEfINed"));
			CHECK(!json::accept("uNDEfINed"));
			CHECK(!json::accept("UNDEfINed"));
			CHECK(!json::accept("undeFINed"));
			CHECK(!json::accept("UndeFINed"));
			CHECK(!json::accept("uNdeFINed"));
			CHECK(!json::accept("UNdeFINed"));
			CHECK(!json::accept("unDeFINed"));
			CHECK(!json::accept("UnDeFINed"));
			CHECK(!json::accept("uNDeFINed"));
			CHECK(!json::accept("UNDeFINed"));
			CHECK(!json::accept("undEFINed"));
			CHECK(!json::accept("UndEFINed"));
			CHECK(!json::accept("uNdEFINed"));
			CHECK(!json::accept("UNdEFINed"));
			CHECK(!json::accept("unDEFINed"));
			CHECK(!json::accept("UnDEFINed"));
			CHECK(!json::accept("uNDEFINed"));
			CHECK(!json::accept("UNDEFINed"));
			CHECK(!json::accept("undefinEd"));
			CHECK(!json::accept("UndefinEd"));
			CHECK(!json::accept("uNdefinEd"));
			CHECK(!json::accept("UNdefinEd"));
			CHECK(!json::accept("unDefinEd"));
			CHECK(!json::accept("UnDefinEd"));
			CHECK(!json::accept("uNDefinEd"));
			CHECK(!json::accept("UNDefinEd"));
			CHECK(!json::accept("undEfinEd"));
			CHECK(!json::accept("UndEfinEd"));
			CHECK(!json::accept("uNdEfinEd"));
			CHECK(!json::accept("UNdEfinEd"));
			CHECK(!json::accept("unDEfinEd"));
			CHECK(!json::accept("UnDEfinEd"));
			CHECK(!json::accept("uNDEfinEd"));
			CHECK(!json::accept("UNDEfinEd"));
			CHECK(!json::accept("undeFinEd"));
			CHECK(!json::accept("UndeFinEd"));
			CHECK(!json::accept("uNdeFinEd"));
			CHECK(!json::accept("UNdeFinEd"));
			CHECK(!json::accept("unDeFinEd"));
			CHECK(!json::accept("UnDeFinEd"));
			CHECK(!json::accept("uNDeFinEd"));
			CHECK(!json::accept("UNDeFinEd"));
			CHECK(!json::accept("undEFinEd"));
			CHECK(!json::accept("UndEFinEd"));
			CHECK(!json::accept("uNdEFinEd"));
			CHECK(!json::accept("UNdEFinEd"));
			CHECK(!json::accept("unDEFinEd"));
			CHECK(!json::accept("UnDEFinEd"));
			CHECK(!json::accept("uNDEFinEd"));
			CHECK(!json::accept("UNDEFinEd"));
			CHECK(!json::accept("undefInEd"));
			CHECK(!json::accept("UndefInEd"));
			CHECK(!json::accept("uNdefInEd"));
			CHECK(!json::accept("UNdefInEd"));
			CHECK(!json::accept("unDefInEd"));
			CHECK(!json::accept("UnDefInEd"));
			CHECK(!json::accept("uNDefInEd"));
			CHECK(!json::accept("UNDefInEd"));
			CHECK(!json::accept("undEfInEd"));
			CHECK(!json::accept("UndEfInEd"));
			CHECK(!json::accept("uNdEfInEd"));
			CHECK(!json::accept("UNdEfInEd"));
			CHECK(!json::accept("unDEfInEd"));
			CHECK(!json::accept("UnDEfInEd"));
			CHECK(!json::accept("uNDEfInEd"));
			CHECK(!json::accept("UNDEfInEd"));
			CHECK(!json::accept("undeFInEd"));
			CHECK(!json::accept("UndeFInEd"));
			CHECK(!json::accept("uNdeFInEd"));
			CHECK(!json::accept("UNdeFInEd"));
			CHECK(!json::accept("unDeFInEd"));
			CHECK(!json::accept("UnDeFInEd"));
			CHECK(!json::accept("uNDeFInEd"));
			CHECK(!json::accept("UNDeFInEd"));
			CHECK(!json::accept("undEFInEd"));
			CHECK(!json::accept("UndEFInEd"));
			CHECK(!json::accept("uNdEFInEd"));
			CHECK(!json::accept("UNdEFInEd"));
			CHECK(!json::accept("unDEFInEd"));
			CHECK(!json::accept("UnDEFInEd"));
			CHECK(!json::accept("uNDEFInEd"));
			CHECK(!json::accept("UNDEFInEd"));
			CHECK(!json::accept("undefiNEd"));
			CHECK(!json::accept("UndefiNEd"));
			CHECK(!json::accept("uNdefiNEd"));
			CHECK(!json::accept("UNdefiNEd"));
			CHECK(!json::accept("unDefiNEd"));
			CHECK(!json::accept("UnDefiNEd"));
			CHECK(!json::accept("uNDefiNEd"));
			CHECK(!json::accept("UNDefiNEd"));
			CHECK(!json::accept("undEfiNEd"));
			CHECK(!json::accept("UndEfiNEd"));
			CHECK(!json::accept("uNdEfiNEd"));
			CHECK(!json::accept("UNdEfiNEd"));
			CHECK(!json::accept("unDEfiNEd"));
			CHECK(!json::accept("UnDEfiNEd"));
			CHECK(!json::accept("uNDEfiNEd"));
			CHECK(!json::accept("UNDEfiNEd"));
			CHECK(!json::accept("undeFiNEd"));
			CHECK(!json::accept("UndeFiNEd"));
			CHECK(!json::accept("uNdeFiNEd"));
			CHECK(!json::accept("UNdeFiNEd"));
			CHECK(!json::accept("unDeFiNEd"));
			CHECK(!json::accept("UnDeFiNEd"));
			CHECK(!json::accept("uNDeFiNEd"));
			CHECK(!json::accept("UNDeFiNEd"));
			CHECK(!json::accept("undEFiNEd"));
			CHECK(!json::accept("UndEFiNEd"));
			CHECK(!json::accept("uNdEFiNEd"));
			CHECK(!json::accept("UNdEFiNEd"));
			CHECK(!json::accept("unDEFiNEd"));
			CHECK(!json::accept("UnDEFiNEd"));
			CHECK(!json::accept("uNDEFiNEd"));
			CHECK(!json::accept("UNDEFiNEd"));
			CHECK(!json::accept("undefINEd"));
			CHECK(!json::accept("UndefINEd"));
			CHECK(!json::accept("uNdefINEd"));
			CHECK(!json::accept("UNdefINEd"));
			CHECK(!json::accept("unDefINEd"));
			CHECK(!json::accept("UnDefINEd"));
			CHECK(!json::accept("uNDefINEd"));
			CHECK(!json::accept("UNDefINEd"));
			CHECK(!json::accept("undEfINEd"));
			CHECK(!json::accept("UndEfINEd"));
			CHECK(!json::accept("uNdEfINEd"));
			CHECK(!json::accept("UNdEfINEd"));
			CHECK(!json::accept("unDEfINEd"));
			CHECK(!json::accept("UnDEfINEd"));
			CHECK(!json::accept("uNDEfINEd"));
			CHECK(!json::accept("UNDEfINEd"));
			CHECK(!json::accept("undeFINEd"));
			CHECK(!json::accept("UndeFINEd"));
			CHECK(!json::accept("uNdeFINEd"));
			CHECK(!json::accept("UNdeFINEd"));
			CHECK(!json::accept("unDeFINEd"));
			CHECK(!json::accept("UnDeFINEd"));
			CHECK(!json::accept("uNDeFINEd"));
			CHECK(!json::accept("UNDeFINEd"));
			CHECK(!json::accept("undEFINEd"));
			CHECK(!json::accept("UndEFINEd"));
			CHECK(!json::accept("uNdEFINEd"));
			CHECK(!json::accept("UNdEFINEd"));
			CHECK(!json::accept("unDEFINEd"));
			CHECK(!json::accept("UnDEFINEd"));
			CHECK(!json::accept("uNDEFINEd"));
			CHECK(!json::accept("UNDEFINEd"));
			CHECK(!json::accept("undefineD"));
			CHECK(!json::accept("UndefineD"));
			CHECK(!json::accept("uNdefineD"));
			CHECK(!json::accept("UNdefineD"));
			CHECK(!json::accept("unDefineD"));
			CHECK(!json::accept("UnDefineD"));
			CHECK(!json::accept("uNDefineD"));
			CHECK(!json::accept("UNDefineD"));
			CHECK(!json::accept("undEfineD"));
			CHECK(!json::accept("UndEfineD"));
			CHECK(!json::accept("uNdEfineD"));
			CHECK(!json::accept("UNdEfineD"));
			CHECK(!json::accept("unDEfineD"));
			CHECK(!json::accept("UnDEfineD"));
			CHECK(!json::accept("uNDEfineD"));
			CHECK(!json::accept("UNDEfineD"));
			CHECK(!json::accept("undeFineD"));
			CHECK(!json::accept("UndeFineD"));
			CHECK(!json::accept("uNdeFineD"));
			CHECK(!json::accept("UNdeFineD"));
			CHECK(!json::accept("unDeFineD"));
			CHECK(!json::accept("UnDeFineD"));
			CHECK(!json::accept("uNDeFineD"));
			CHECK(!json::accept("UNDeFineD"));
			CHECK(!json::accept("undEFineD"));
			CHECK(!json::accept("UndEFineD"));
			CHECK(!json::accept("uNdEFineD"));
			CHECK(!json::accept("UNdEFineD"));
			CHECK(!json::accept("unDEFineD"));
			CHECK(!json::accept("UnDEFineD"));
			CHECK(!json::accept("uNDEFineD"));
			CHECK(!json::accept("UNDEFineD"));
			CHECK(!json::accept("undefIneD"));
			CHECK(!json::accept("UndefIneD"));
			CHECK(!json::accept("uNdefIneD"));
			CHECK(!json::accept("UNdefIneD"));
			CHECK(!json::accept("unDefIneD"));
			CHECK(!json::accept("UnDefIneD"));
			CHECK(!json::accept("uNDefIneD"));
			CHECK(!json::accept("UNDefIneD"));
			CHECK(!json::accept("undEfIneD"));
			CHECK(!json::accept("UndEfIneD"));
			CHECK(!json::accept("uNdEfIneD"));
			CHECK(!json::accept("UNdEfIneD"));
			CHECK(!json::accept("unDEfIneD"));
			CHECK(!json::accept("UnDEfIneD"));
			CHECK(!json::accept("uNDEfIneD"));
			CHECK(!json::accept("UNDEfIneD"));
			CHECK(!json::accept("undeFIneD"));
			CHECK(!json::accept("UndeFIneD"));
			CHECK(!json::accept("uNdeFIneD"));
			CHECK(!json::accept("UNdeFIneD"));
			CHECK(!json::accept("unDeFIneD"));
			CHECK(!json::accept("UnDeFIneD"));
			CHECK(!json::accept("uNDeFIneD"));
			CHECK(!json::accept("UNDeFIneD"));
			CHECK(!json::accept("undEFIneD"));
			CHECK(!json::accept("UndEFIneD"));
			CHECK(!json::accept("uNdEFIneD"));
			CHECK(!json::accept("UNdEFIneD"));
			CHECK(!json::accept("unDEFIneD"));
			CHECK(!json::accept("UnDEFIneD"));
			CHECK(!json::accept("uNDEFIneD"));
			CHECK(!json::accept("UNDEFIneD"));
			CHECK(!json::accept("undefiNeD"));
			CHECK(!json::accept("UndefiNeD"));
			CHECK(!json::accept("uNdefiNeD"));
			CHECK(!json::accept("UNdefiNeD"));
			CHECK(!json::accept("unDefiNeD"));
			CHECK(!json::accept("UnDefiNeD"));
			CHECK(!json::accept("uNDefiNeD"));
			CHECK(!json::accept("UNDefiNeD"));
			CHECK(!json::accept("undEfiNeD"));
			CHECK(!json::accept("UndEfiNeD"));
			CHECK(!json::accept("uNdEfiNeD"));
			CHECK(!json::accept("UNdEfiNeD"));
			CHECK(!json::accept("unDEfiNeD"));
			CHECK(!json::accept("UnDEfiNeD"));
			CHECK(!json::accept("uNDEfiNeD"));
			CHECK(!json::accept("UNDEfiNeD"));
			CHECK(!json::accept("undeFiNeD"));
			CHECK(!json::accept("UndeFiNeD"));
			CHECK(!json::accept("uNdeFiNeD"));
			CHECK(!json::accept("UNdeFiNeD"));
			CHECK(!json::accept("unDeFiNeD"));
			CHECK(!json::accept("UnDeFiNeD"));
			CHECK(!json::accept("uNDeFiNeD"));
			CHECK(!json::accept("UNDeFiNeD"));
			CHECK(!json::accept("undEFiNeD"));
			CHECK(!json::accept("UndEFiNeD"));
			CHECK(!json::accept("uNdEFiNeD"));
			CHECK(!json::accept("UNdEFiNeD"));
			CHECK(!json::accept("unDEFiNeD"));
			CHECK(!json::accept("UnDEFiNeD"));
			CHECK(!json::accept("uNDEFiNeD"));
			CHECK(!json::accept("UNDEFiNeD"));
			CHECK(!json::accept("undefINeD"));
			CHECK(!json::accept("UndefINeD"));
			CHECK(!json::accept("uNdefINeD"));
			CHECK(!json::accept("UNdefINeD"));
			CHECK(!json::accept("unDefINeD"));
			CHECK(!json::accept("UnDefINeD"));
			CHECK(!json::accept("uNDefINeD"));
			CHECK(!json::accept("UNDefINeD"));
			CHECK(!json::accept("undEfINeD"));
			CHECK(!json::accept("UndEfINeD"));
			CHECK(!json::accept("uNdEfINeD"));
			CHECK(!json::accept("UNdEfINeD"));
			CHECK(!json::accept("unDEfINeD"));
			CHECK(!json::accept("UnDEfINeD"));
			CHECK(!json::accept("uNDEfINeD"));
			CHECK(!json::accept("UNDEfINeD"));
			CHECK(!json::accept("undeFINeD"));
			CHECK(!json::accept("UndeFINeD"));
			CHECK(!json::accept("uNdeFINeD"));
			CHECK(!json::accept("UNdeFINeD"));
			CHECK(!json::accept("unDeFINeD"));
			CHECK(!json::accept("UnDeFINeD"));
			CHECK(!json::accept("uNDeFINeD"));
			CHECK(!json::accept("UNDeFINeD"));
			CHECK(!json::accept("undEFINeD"));
			CHECK(!json::accept("UndEFINeD"));
			CHECK(!json::accept("uNdEFINeD"));
			CHECK(!json::accept("UNdEFINeD"));
			CHECK(!json::accept("unDEFINeD"));
			CHECK(!json::accept("UnDEFINeD"));
			CHECK(!json::accept("uNDEFINeD"));
			CHECK(!json::accept("UNDEFINeD"));
			CHECK(!json::accept("undefinED"));
			CHECK(!json::accept("UndefinED"));
			CHECK(!json::accept("uNdefinED"));
			CHECK(!json::accept("UNdefinED"));
			CHECK(!json::accept("unDefinED"));
			CHECK(!json::accept("UnDefinED"));
			CHECK(!json::accept("uNDefinED"));
			CHECK(!json::accept("UNDefinED"));
			CHECK(!json::accept("undEfinED"));
			CHECK(!json::accept("UndEfinED"));
			CHECK(!json::accept("uNdEfinED"));
			CHECK(!json::accept("UNdEfinED"));
			CHECK(!json::accept("unDEfinED"));
			CHECK(!json::accept("UnDEfinED"));
			CHECK(!json::accept("uNDEfinED"));
			CHECK(!json::accept("UNDEfinED"));
			CHECK(!json::accept("undeFinED"));
			CHECK(!json::accept("UndeFinED"));
			CHECK(!json::accept("uNdeFinED"));
			CHECK(!json::accept("UNdeFinED"));
			CHECK(!json::accept("unDeFinED"));
			CHECK(!json::accept("UnDeFinED"));
			CHECK(!json::accept("uNDeFinED"));
			CHECK(!json::accept("UNDeFinED"));
			CHECK(!json::accept("undEFinED"));
			CHECK(!json::accept("UndEFinED"));
			CHECK(!json::accept("uNdEFinED"));
			CHECK(!json::accept("UNdEFinED"));
			CHECK(!json::accept("unDEFinED"));
			CHECK(!json::accept("UnDEFinED"));
			CHECK(!json::accept("uNDEFinED"));
			CHECK(!json::accept("UNDEFinED"));
			CHECK(!json::accept("undefInED"));
			CHECK(!json::accept("UndefInED"));
			CHECK(!json::accept("uNdefInED"));
			CHECK(!json::accept("UNdefInED"));
			CHECK(!json::accept("unDefInED"));
			CHECK(!json::accept("UnDefInED"));
			CHECK(!json::accept("uNDefInED"));
			CHECK(!json::accept("UNDefInED"));
			CHECK(!json::accept("undEfInED"));
			CHECK(!json::accept("UndEfInED"));
			CHECK(!json::accept("uNdEfInED"));
			CHECK(!json::accept("UNdEfInED"));
			CHECK(!json::accept("unDEfInED"));
			CHECK(!json::accept("UnDEfInED"));
			CHECK(!json::accept("uNDEfInED"));
			CHECK(!json::accept("UNDEfInED"));
			CHECK(!json::accept("undeFInED"));
			CHECK(!json::accept("UndeFInED"));
			CHECK(!json::accept("uNdeFInED"));
			CHECK(!json::accept("UNdeFInED"));
			CHECK(!json::accept("unDeFInED"));
			CHECK(!json::accept("UnDeFInED"));
			CHECK(!json::accept("uNDeFInED"));
			CHECK(!json::accept("UNDeFInED"));
			CHECK(!json::accept("undEFInED"));
			CHECK(!json::accept("UndEFInED"));
			CHECK(!json::accept("uNdEFInED"));
			CHECK(!json::accept("UNdEFInED"));
			CHECK(!json::accept("unDEFInED"));
			CHECK(!json::accept("UnDEFInED"));
			CHECK(!json::accept("uNDEFInED"));
			CHECK(!json::accept("UNDEFInED"));
			CHECK(!json::accept("undefiNED"));
			CHECK(!json::accept("UndefiNED"));
			CHECK(!json::accept("uNdefiNED"));
			CHECK(!json::accept("UNdefiNED"));
			CHECK(!json::accept("unDefiNED"));
			CHECK(!json::accept("UnDefiNED"));
			CHECK(!json::accept("uNDefiNED"));
			CHECK(!json::accept("UNDefiNED"));
			CHECK(!json::accept("undEfiNED"));
			CHECK(!json::accept("UndEfiNED"));
			CHECK(!json::accept("uNdEfiNED"));
			CHECK(!json::accept("UNdEfiNED"));
			CHECK(!json::accept("unDEfiNED"));
			CHECK(!json::accept("UnDEfiNED"));
			CHECK(!json::accept("uNDEfiNED"));
			CHECK(!json::accept("UNDEfiNED"));
			CHECK(!json::accept("undeFiNED"));
			CHECK(!json::accept("UndeFiNED"));
			CHECK(!json::accept("uNdeFiNED"));
			CHECK(!json::accept("UNdeFiNED"));
			CHECK(!json::accept("unDeFiNED"));
			CHECK(!json::accept("UnDeFiNED"));
			CHECK(!json::accept("uNDeFiNED"));
			CHECK(!json::accept("UNDeFiNED"));
			CHECK(!json::accept("undEFiNED"));
			CHECK(!json::accept("UndEFiNED"));
			CHECK(!json::accept("uNdEFiNED"));
			CHECK(!json::accept("UNdEFiNED"));
			CHECK(!json::accept("unDEFiNED"));
			CHECK(!json::accept("UnDEFiNED"));
			CHECK(!json::accept("uNDEFiNED"));
			CHECK(!json::accept("UNDEFiNED"));
			CHECK(!json::accept("undefINED"));
			CHECK(!json::accept("UndefINED"));
			CHECK(!json::accept("uNdefINED"));
			CHECK(!json::accept("UNdefINED"));
			CHECK(!json::accept("unDefINED"));
			CHECK(!json::accept("UnDefINED"));
			CHECK(!json::accept("uNDefINED"));
			CHECK(!json::accept("UNDefINED"));
			CHECK(!json::accept("undEfINED"));
			CHECK(!json::accept("UndEfINED"));
			CHECK(!json::accept("uNdEfINED"));
			CHECK(!json::accept("UNdEfINED"));
			CHECK(!json::accept("unDEfINED"));
			CHECK(!json::accept("UnDEfINED"));
			CHECK(!json::accept("uNDEfINED"));
			CHECK(!json::accept("UNDEfINED"));
			CHECK(!json::accept("undeFINED"));
			CHECK(!json::accept("UndeFINED"));
			CHECK(!json::accept("uNdeFINED"));
			CHECK(!json::accept("UNdeFINED"));
			CHECK(!json::accept("unDeFINED"));
			CHECK(!json::accept("UnDeFINED"));
			CHECK(!json::accept("uNDeFINED"));
			CHECK(!json::accept("UNDeFINED"));
			CHECK(!json::accept("undEFINED"));
			CHECK(!json::accept("UndEFINED"));
			CHECK(!json::accept("uNdEFINED"));
			CHECK(!json::accept("UNdEFINED"));
			CHECK(!json::accept("unDEFINED"));
			CHECK(!json::accept("UnDEFINED"));
			CHECK(!json::accept("uNDEFINED"));
			CHECK(!json::accept("UNDEFINED"));
		}
    }
    // The literal names NaN and any expression for infinity are not valid json tokens.
    // Verify that they are rejected, no matter the capitalisation.
    SECTION("Illegal literal numbers")
    {
		SECTION("inf")
		{
			CHECK(!json::accept("inf"));
			CHECK(!json::accept("Inf"));
			CHECK(!json::accept("iNf"));
			CHECK(!json::accept("INf"));
			CHECK(!json::accept("inF"));
			CHECK(!json::accept("InF"));
			CHECK(!json::accept("iNF"));
			CHECK(!json::accept("INF"));
        }
		SECTION("infinity")
		{
			CHECK(!json::accept("infinity"));
			CHECK(!json::accept("Infinity"));
			CHECK(!json::accept("iNfinity"));
			CHECK(!json::accept("INfinity"));
			CHECK(!json::accept("inFinity"));
			CHECK(!json::accept("InFinity"));
			CHECK(!json::accept("iNFinity"));
			CHECK(!json::accept("INFinity"));
			CHECK(!json::accept("infInity"));
			CHECK(!json::accept("InfInity"));
			CHECK(!json::accept("iNfInity"));
			CHECK(!json::accept("INfInity"));
			CHECK(!json::accept("inFInity"));
			CHECK(!json::accept("InFInity"));
			CHECK(!json::accept("iNFInity"));
			CHECK(!json::accept("INFInity"));
			CHECK(!json::accept("infiNity"));
			CHECK(!json::accept("InfiNity"));
			CHECK(!json::accept("iNfiNity"));
			CHECK(!json::accept("INfiNity"));
			CHECK(!json::accept("inFiNity"));
			CHECK(!json::accept("InFiNity"));
			CHECK(!json::accept("iNFiNity"));
			CHECK(!json::accept("INFiNity"));
			CHECK(!json::accept("infINity"));
			CHECK(!json::accept("InfINity"));
			CHECK(!json::accept("iNfINity"));
			CHECK(!json::accept("INfINity"));
			CHECK(!json::accept("inFINity"));
			CHECK(!json::accept("InFINity"));
			CHECK(!json::accept("iNFINity"));
			CHECK(!json::accept("INFINity"));
			CHECK(!json::accept("infinIty"));
			CHECK(!json::accept("InfinIty"));
			CHECK(!json::accept("iNfinIty"));
			CHECK(!json::accept("INfinIty"));
			CHECK(!json::accept("inFinIty"));
			CHECK(!json::accept("InFinIty"));
			CHECK(!json::accept("iNFinIty"));
			CHECK(!json::accept("INFinIty"));
			CHECK(!json::accept("infInIty"));
			CHECK(!json::accept("InfInIty"));
			CHECK(!json::accept("iNfInIty"));
			CHECK(!json::accept("INfInIty"));
			CHECK(!json::accept("inFInIty"));
			CHECK(!json::accept("InFInIty"));
			CHECK(!json::accept("iNFInIty"));
			CHECK(!json::accept("INFInIty"));
			CHECK(!json::accept("infiNIty"));
			CHECK(!json::accept("InfiNIty"));
			CHECK(!json::accept("iNfiNIty"));
			CHECK(!json::accept("INfiNIty"));
			CHECK(!json::accept("inFiNIty"));
			CHECK(!json::accept("InFiNIty"));
			CHECK(!json::accept("iNFiNIty"));
			CHECK(!json::accept("INFiNIty"));
			CHECK(!json::accept("infINIty"));
			CHECK(!json::accept("InfINIty"));
			CHECK(!json::accept("iNfINIty"));
			CHECK(!json::accept("INfINIty"));
			CHECK(!json::accept("inFINIty"));
			CHECK(!json::accept("InFINIty"));
			CHECK(!json::accept("iNFINIty"));
			CHECK(!json::accept("INFINIty"));
			CHECK(!json::accept("infiniTy"));
			CHECK(!json::accept("InfiniTy"));
			CHECK(!json::accept("iNfiniTy"));
			CHECK(!json::accept("INfiniTy"));
			CHECK(!json::accept("inFiniTy"));
			CHECK(!json::accept("InFiniTy"));
			CHECK(!json::accept("iNFiniTy"));
			CHECK(!json::accept("INFiniTy"));
			CHECK(!json::accept("infIniTy"));
			CHECK(!json::accept("InfIniTy"));
			CHECK(!json::accept("iNfIniTy"));
			CHECK(!json::accept("INfIniTy"));
			CHECK(!json::accept("inFIniTy"));
			CHECK(!json::accept("InFIniTy"));
			CHECK(!json::accept("iNFIniTy"));
			CHECK(!json::accept("INFIniTy"));
			CHECK(!json::accept("infiNiTy"));
			CHECK(!json::accept("InfiNiTy"));
			CHECK(!json::accept("iNfiNiTy"));
			CHECK(!json::accept("INfiNiTy"));
			CHECK(!json::accept("inFiNiTy"));
			CHECK(!json::accept("InFiNiTy"));
			CHECK(!json::accept("iNFiNiTy"));
			CHECK(!json::accept("INFiNiTy"));
			CHECK(!json::accept("infINiTy"));
			CHECK(!json::accept("InfINiTy"));
			CHECK(!json::accept("iNfINiTy"));
			CHECK(!json::accept("INfINiTy"));
			CHECK(!json::accept("inFINiTy"));
			CHECK(!json::accept("InFINiTy"));
			CHECK(!json::accept("iNFINiTy"));
			CHECK(!json::accept("INFINiTy"));
			CHECK(!json::accept("infinITy"));
			CHECK(!json::accept("InfinITy"));
			CHECK(!json::accept("iNfinITy"));
			CHECK(!json::accept("INfinITy"));
			CHECK(!json::accept("inFinITy"));
			CHECK(!json::accept("InFinITy"));
			CHECK(!json::accept("iNFinITy"));
			CHECK(!json::accept("INFinITy"));
			CHECK(!json::accept("infInITy"));
			CHECK(!json::accept("InfInITy"));
			CHECK(!json::accept("iNfInITy"));
			CHECK(!json::accept("INfInITy"));
			CHECK(!json::accept("inFInITy"));
			CHECK(!json::accept("InFInITy"));
			CHECK(!json::accept("iNFInITy"));
			CHECK(!json::accept("INFInITy"));
			CHECK(!json::accept("infiNITy"));
			CHECK(!json::accept("InfiNITy"));
			CHECK(!json::accept("iNfiNITy"));
			CHECK(!json::accept("INfiNITy"));
			CHECK(!json::accept("inFiNITy"));
			CHECK(!json::accept("InFiNITy"));
			CHECK(!json::accept("iNFiNITy"));
			CHECK(!json::accept("INFiNITy"));
			CHECK(!json::accept("infINITy"));
			CHECK(!json::accept("InfINITy"));
			CHECK(!json::accept("iNfINITy"));
			CHECK(!json::accept("INfINITy"));
			CHECK(!json::accept("inFINITy"));
			CHECK(!json::accept("InFINITy"));
			CHECK(!json::accept("iNFINITy"));
			CHECK(!json::accept("INFINITy"));
			CHECK(!json::accept("infinitY"));
			CHECK(!json::accept("InfinitY"));
			CHECK(!json::accept("iNfinitY"));
			CHECK(!json::accept("INfinitY"));
			CHECK(!json::accept("inFinitY"));
			CHECK(!json::accept("InFinitY"));
			CHECK(!json::accept("iNFinitY"));
			CHECK(!json::accept("INFinitY"));
			CHECK(!json::accept("infInitY"));
			CHECK(!json::accept("InfInitY"));
			CHECK(!json::accept("iNfInitY"));
			CHECK(!json::accept("INfInitY"));
			CHECK(!json::accept("inFInitY"));
			CHECK(!json::accept("InFInitY"));
			CHECK(!json::accept("iNFInitY"));
			CHECK(!json::accept("INFInitY"));
			CHECK(!json::accept("infiNitY"));
			CHECK(!json::accept("InfiNitY"));
			CHECK(!json::accept("iNfiNitY"));
			CHECK(!json::accept("INfiNitY"));
			CHECK(!json::accept("inFiNitY"));
			CHECK(!json::accept("InFiNitY"));
			CHECK(!json::accept("iNFiNitY"));
			CHECK(!json::accept("INFiNitY"));
			CHECK(!json::accept("infINitY"));
			CHECK(!json::accept("InfINitY"));
			CHECK(!json::accept("iNfINitY"));
			CHECK(!json::accept("INfINitY"));
			CHECK(!json::accept("inFINitY"));
			CHECK(!json::accept("InFINitY"));
			CHECK(!json::accept("iNFINitY"));
			CHECK(!json::accept("INFINitY"));
			CHECK(!json::accept("infinItY"));
			CHECK(!json::accept("InfinItY"));
			CHECK(!json::accept("iNfinItY"));
			CHECK(!json::accept("INfinItY"));
			CHECK(!json::accept("inFinItY"));
			CHECK(!json::accept("InFinItY"));
			CHECK(!json::accept("iNFinItY"));
			CHECK(!json::accept("INFinItY"));
			CHECK(!json::accept("infInItY"));
			CHECK(!json::accept("InfInItY"));
			CHECK(!json::accept("iNfInItY"));
			CHECK(!json::accept("INfInItY"));
			CHECK(!json::accept("inFInItY"));
			CHECK(!json::accept("InFInItY"));
			CHECK(!json::accept("iNFInItY"));
			CHECK(!json::accept("INFInItY"));
			CHECK(!json::accept("infiNItY"));
			CHECK(!json::accept("InfiNItY"));
			CHECK(!json::accept("iNfiNItY"));
			CHECK(!json::accept("INfiNItY"));
			CHECK(!json::accept("inFiNItY"));
			CHECK(!json::accept("InFiNItY"));
			CHECK(!json::accept("iNFiNItY"));
			CHECK(!json::accept("INFiNItY"));
			CHECK(!json::accept("infINItY"));
			CHECK(!json::accept("InfINItY"));
			CHECK(!json::accept("iNfINItY"));
			CHECK(!json::accept("INfINItY"));
			CHECK(!json::accept("inFINItY"));
			CHECK(!json::accept("InFINItY"));
			CHECK(!json::accept("iNFINItY"));
			CHECK(!json::accept("INFINItY"));
			CHECK(!json::accept("infiniTY"));
			CHECK(!json::accept("InfiniTY"));
			CHECK(!json::accept("iNfiniTY"));
			CHECK(!json::accept("INfiniTY"));
			CHECK(!json::accept("inFiniTY"));
			CHECK(!json::accept("InFiniTY"));
			CHECK(!json::accept("iNFiniTY"));
			CHECK(!json::accept("INFiniTY"));
			CHECK(!json::accept("infIniTY"));
			CHECK(!json::accept("InfIniTY"));
			CHECK(!json::accept("iNfIniTY"));
			CHECK(!json::accept("INfIniTY"));
			CHECK(!json::accept("inFIniTY"));
			CHECK(!json::accept("InFIniTY"));
			CHECK(!json::accept("iNFIniTY"));
			CHECK(!json::accept("INFIniTY"));
			CHECK(!json::accept("infiNiTY"));
			CHECK(!json::accept("InfiNiTY"));
			CHECK(!json::accept("iNfiNiTY"));
			CHECK(!json::accept("INfiNiTY"));
			CHECK(!json::accept("inFiNiTY"));
			CHECK(!json::accept("InFiNiTY"));
			CHECK(!json::accept("iNFiNiTY"));
			CHECK(!json::accept("INFiNiTY"));
			CHECK(!json::accept("infINiTY"));
			CHECK(!json::accept("InfINiTY"));
			CHECK(!json::accept("iNfINiTY"));
			CHECK(!json::accept("INfINiTY"));
			CHECK(!json::accept("inFINiTY"));
			CHECK(!json::accept("InFINiTY"));
			CHECK(!json::accept("iNFINiTY"));
			CHECK(!json::accept("INFINiTY"));
			CHECK(!json::accept("infinITY"));
			CHECK(!json::accept("InfinITY"));
			CHECK(!json::accept("iNfinITY"));
			CHECK(!json::accept("INfinITY"));
			CHECK(!json::accept("inFinITY"));
			CHECK(!json::accept("InFinITY"));
			CHECK(!json::accept("iNFinITY"));
			CHECK(!json::accept("INFinITY"));
			CHECK(!json::accept("infInITY"));
			CHECK(!json::accept("InfInITY"));
			CHECK(!json::accept("iNfInITY"));
			CHECK(!json::accept("INfInITY"));
			CHECK(!json::accept("inFInITY"));
			CHECK(!json::accept("InFInITY"));
			CHECK(!json::accept("iNFInITY"));
			CHECK(!json::accept("INFInITY"));
			CHECK(!json::accept("infiNITY"));
			CHECK(!json::accept("InfiNITY"));
			CHECK(!json::accept("iNfiNITY"));
			CHECK(!json::accept("INfiNITY"));
			CHECK(!json::accept("inFiNITY"));
			CHECK(!json::accept("InFiNITY"));
			CHECK(!json::accept("iNFiNITY"));
			CHECK(!json::accept("INFiNITY"));
			CHECK(!json::accept("infINITY"));
			CHECK(!json::accept("InfINITY"));
			CHECK(!json::accept("iNfINITY"));
			CHECK(!json::accept("INfINITY"));
			CHECK(!json::accept("inFINITY"));
			CHECK(!json::accept("InFINITY"));
			CHECK(!json::accept("iNFINITY"));
			CHECK(!json::accept("INFINITY"));
		}
		SECTION("NaN")
		{
			CHECK(!json::accept("nan"));
			CHECK(!json::accept("Nan"));
			CHECK(!json::accept("nAn"));
			CHECK(!json::accept("NAn"));
			CHECK(!json::accept("naN"));
			CHECK(!json::accept("NaN"));
			CHECK(!json::accept("nAN"));
			CHECK(!json::accept("NAN"));
		}
    }
}

TEST_CASE("parse")
{
    SECTION("values")
    {
        CHECK(json::parse("null")==nullptr);
        CHECK(json::parse("true")==true);
        CHECK(json::parse("false")==false);
    }
    SECTION("whitespace")
    {
        CHECK(json::parse(" false ")==json::parse("false"));
        CHECK(json::parse(" false\t")==json::parse("false"));
        CHECK(json::parse(" false\n")==json::parse("false"));
        CHECK(json::parse(" false\u000d")==json::parse("false"));
        CHECK(json::parse("\tfalse ")==json::parse("false"));
        CHECK(json::parse("\tfalse\t")==json::parse("false"));
        CHECK(json::parse("\tfalse\n")==json::parse("false"));
        CHECK(json::parse("\tfalse\u000d")==json::parse("false"));
        CHECK(json::parse("\nfalse ")==json::parse("false"));
        CHECK(json::parse("\nfalse\t")==json::parse("false"));
        CHECK(json::parse("\nfalse\n")==json::parse("false"));
        CHECK(json::parse("\nfalse\u000d")==json::parse("false"));
        CHECK(json::parse("\u000dfalse ")==json::parse("false"));
        CHECK(json::parse("\u000dfalse\t")==json::parse("false"));
        CHECK(json::parse("\u000dfalse\n")==json::parse("false"));
        CHECK(json::parse("\u000dfalse\u000d")==json::parse("false"));
        CHECK(json::parse(" null ")==json::parse("null"));
        CHECK(json::parse(" null\t")==json::parse("null"));
        CHECK(json::parse(" null\n")==json::parse("null"));
        CHECK(json::parse(" null\u000d")==json::parse("null"));
        CHECK(json::parse("\tnull ")==json::parse("null"));
        CHECK(json::parse("\tnull\t")==json::parse("null"));
        CHECK(json::parse("\tnull\n")==json::parse("null"));
        CHECK(json::parse("\tnull\u000d")==json::parse("null"));
        CHECK(json::parse("\nnull ")==json::parse("null"));
        CHECK(json::parse("\nnull\t")==json::parse("null"));
        CHECK(json::parse("\nnull\n")==json::parse("null"));
        CHECK(json::parse("\nnull\u000d")==json::parse("null"));
        CHECK(json::parse("\u000dnull ")==json::parse("null"));
        CHECK(json::parse("\u000dnull\t")==json::parse("null"));
        CHECK(json::parse("\u000dnull\n")==json::parse("null"));
        CHECK(json::parse("\u000dnull\u000d")==json::parse("null"));
        CHECK(json::parse(" true ")==json::parse("true"));
        CHECK(json::parse(" true\t")==json::parse("true"));
        CHECK(json::parse(" true\n")==json::parse("true"));
        CHECK(json::parse(" true\u000d")==json::parse("true"));
        CHECK(json::parse("\ttrue ")==json::parse("true"));
        CHECK(json::parse("\ttrue\t")==json::parse("true"));
        CHECK(json::parse("\ttrue\n")==json::parse("true"));
        CHECK(json::parse("\ttrue\u000d")==json::parse("true"));
        CHECK(json::parse("\ntrue ")==json::parse("true"));
        CHECK(json::parse("\ntrue\t")==json::parse("true"));
        CHECK(json::parse("\ntrue\n")==json::parse("true"));
        CHECK(json::parse("\ntrue\u000d")==json::parse("true"));
        CHECK(json::parse("\u000dtrue ")==json::parse("true"));
        CHECK(json::parse("\u000dtrue\t")==json::parse("true"));
        CHECK(json::parse("\u000dtrue\n")==json::parse("true"));
        CHECK(json::parse("\u000dtrue\u000d")==json::parse("true"));    
    }
}